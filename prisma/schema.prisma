generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer_order {
  id                   String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id          String            @db.Uuid
  order_date           DateTime          @db.Date
  delivery_schedule_id String            @db.Uuid
  created_at           DateTime          @default(now()) @db.Timestamp(6)
  updated_at           DateTime          @default(now()) @db.Timestamp(6)
  user                 user              @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  delivery_schedule    delivery_schedule @relation(fields: [delivery_schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model delivery_schedule {
  id             String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  delivery_date  DateTime         @db.Date
  driver_id      String           @db.Uuid
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  customer_order customer_order[]
  user           user             @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory {
  id              String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_name    String   @db.VarChar(255)
  quantity        Int
  shipment_status String   @db.VarChar(255)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
}

model organization {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email             String              @unique @db.VarChar(255)
  firstName         String?             @db.VarChar(255)
  lastName          String?             @db.VarChar(255)
  roq_user_id       String              @db.VarChar(255)
  tenant_id         String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  customer_order    customer_order[]
  delivery_schedule delivery_schedule[]
  organization      organization[]
}
